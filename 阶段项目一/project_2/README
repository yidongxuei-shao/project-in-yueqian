Copyright 12/8/2023 Szm

1、开发平台及开发环境
    本次项目在ARM平台上使用
    交叉编译器：arm-linux-gcc, 版本 5.4.0
    开发板内核版本：
    Linux GEC6818 3.4.39-gec #3 SMP PREEMPT Wed Jan 16 17:28:23 CST 2019 armv7l GNU/Linux
    lcd屏的尺寸：800 * 480
    触摸屏的尺寸：800 * 480
    虚拟机：Ubuntu22.04

2、项目功能：
    1、在主界面有两图标，商家和用户，
        1.1、当使用者点击商家图标时，会进入系统后台，查看已经注册过的
             用户信息，包含账号、密码、余额、注册时间和最新的充值时间（这部分使用字库完成）
        1.2、当用户点击用户图标时，会进入用户账号登录和注册界面

    2、登录和注册
        1、注册
             用户选择注册时，进入提示将电话号码作为注册账号，接着提示输入注册密码
             当用户选择确定，会在本路径下的user_data的文件夹中创建以用户登录的账号作为文件名（如 账号.txt）
             当用户注册完成后，会有提示框，询问是否进行登录，否，将回到主界面，即选择用户类型界面。
        2、登录
             用户选择登录时，会从链表中读取用户账号信息，有用户输入的账号，则进行密码匹配，密码
             输入正确，则进行下一步
             
    3、用户充电类型选择
        当用户选择，图片上的任意图标，即快速充电，普通充电，系统会获取一次当前的系统时间，当用户充电完成，也
        再次获取系统时间，并将获取到的时间字符串进行分割，得到时、分、秒，再将得到的开始时间字符串和
        结束充电时间字符串写入用户信息文件中，同时，将分割后的开始充电的时、分、秒和结束充电时间的时、分、秒
        写入链表中，通过充电的开始时间和结束时间计算本次充电金额。

    4、支付界面
        用户完成本次充电后，会选择支付方式，二维码支付和余额支付，用户选择二维码支付，则会弹出一张
        二维码图片，之后进入最后的界面，感谢界面，当用户选择余额支付，则进入下一步，即标题5。

    5、充值
        在读取该节点的用户账号余额，大于充电金额，扣除金额，将剩下的金额，写文本指定的位置和写入链表中
        当用户余额不足时，则进入充值界面，用户可以输入3位数的充值金额，并将最新的充值记录写入文本
        的指定位置和链表中用户充值完成后，余额大于充电金额，则再次执行上一步的步骤。

    6、感谢界面
        当用户支付成功时，会展示感谢界面7s，之后则再次回到待机界面，等待下一个用户。

3、项目结构

.
├── image                       存放项目所需要的图片
│   ├── charge_gif              存放充电动画的图片
│   ├── first_gif               开机动画的图片
│   ├── number                  数字图片
│   ├── number_2
│   ├── number_4
│   ├── pictrue                 系统运行的界面图片和提示框
│   └── sec_gif
├── include                     项目的头文件
│   ├── double_list.h           链表
│   ├── file_opt.h              关于文件的读写
│   ├── font.h                  字库
│   ├── get_time.h              关于获取时间
│   ├── jconfig.h
│   ├── jerror.h
│   ├── jmorecfg.h
│   ├── jpeg.h                  显示jpeg格式图片
│   ├── jpeglib.h
│   ├── key_pad.h               触摸屏坐标设置
│   ├── lcd.h                   lcd初始化
│   ├── libpng16
│   ├── main.h                  程序运行需要的图片的宏
│   ├── master.h                商家界面
│   ├── pngconf.h -> libpng16/pngconf.h
│   ├── png.h -> libpng16/png.h
│   ├── pnglibconf.h -> libpng16/pnglibconf.h
│   ├── read_png.h              显示png格式的图片
│   ├── ts.h                    触摸屏初始化和获取触摸屏的坐标
│   ├── zconf.h
│   └── zlib.h
├── lib                         程序运行需要的库
│   ├── lib
│   ├── libfont.a
│   ├── libjpeg.a
│   ├── libjpeg.la
│   ├── libjpeg.so -> libjpeg.so.9.5.0
│   ├── libjpeg.so.9 -> libjpeg.so.9.5.0
│   ├── libjpeg.so.9.5.0
│   ├── libpng16.a
│   ├── libpng16.la
│   ├── libpng16.so -> libpng16.so.16.37.0
│   ├── libpng16.so.16 -> libpng16.so.16.37.0
│   ├── libpng16.so.16.37.0
│   ├── libpng.a -> libpng16.a
│   ├── libpng.la -> libpng16.la
│   ├── libpng.so -> libpng16.so
│   ├── libz.a
│   ├── libz.so -> libz.so.1.2.10
│   ├── libz.so.1 -> libz.so.1.2.10
│   ├── libz.so.1.2.10
│   └── pkgconfig
├── main                                程序可执行文件
├── Makefile                            
├── README                              这个文件
├── src                                 源文件
│   ├── double_list.c                   关于链表操作
│   ├── file_opt.c                      关于文件操作
│   ├── get_time.c                      关于时间获取
│   ├── jpeg.c                          关于显示jpeg格式图片
│   ├── key_pad.c                       关于设置触摸屏的功能按键的坐标
│   ├── lcd.c                           关于lcd初始化
│   ├── main.c                          主程序
│   ├── master.c                        关于商家操作
│   ├── read_png.c                      关于显示png格式的图片
│   └── ts.c                            关于触摸屏
└── user_data               用户信息文件
    ├── 12312312312.txt
    ├── 12345678901.txt
    ├── 15119655797.txt
    ├── 34567890123.txt
    └── 45678901234.txt

4、用户文件数据格式

   文件内容：
            文件内容只有一行（用户数据文件不是给人看的，是给程序看的）
   文件内容格式：
             开始：11位是账号信息
                   4位是当前账号剩余的金额
                   24位是用户注册时间    
                   其余为用户的开始充电时间和结束充电时间
 
    11位账号      6位密码        4位余额      25位用户充值时间    25位注册时间           其余均为充电时间
  -------------|------------|--------------|------------------|-------------------|---------------
 



5、程序编译
    make gcc        这是编译ARM平台的可执行文件
6、运行
    ./main

7、如果想改变显示的图片可在main.h中的宏进行修改


    

        
        

